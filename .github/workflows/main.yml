name: Continuous Integration

on:
  push:
  workflow_dispatch:

jobs:
  execute_test:
    runs-on: ubuntu-latest
    environment: development
    env:
      APP_URL: ${{ vars.APP_URL }}
      DEVICE_UUID: ${{ vars.DEVICE_UUID }}
      MOBILE_APP_PATH: ${{ vars.MOBILE_APP_PATH }}
      MOBILE_AUTOMATION_NAME: ${{ vars.MOBILE_AUTOMATION_NAME }}
      MOBILE_DEVICE_NAME: ${{ vars.MOBILE_DEVICE_NAME }}
      MOBILE_PLATFORM_NAME: ${{ vars.MOBILE_PLATFORM_NAME }}
      MONGO_PROJECT: ${{ vars.MONGO_PROJECT }}
      MONGO_PASSWORD: ${{vars.MONGO_PASSWORD}}
      MONGO_URI: ${{vars.MONGO_URI}}
      PORT: 3333

    steps:
      - uses: actions/checkout@v4

      - name: Debug APP_URL
        run: echo "APP_URL=$APP_URL"


      - name: Use Python 3.14
        uses: actions/setup-python@v5
        with:
          python-version: 3.14
          cache: 'pip'

      - name: Install Dependencies
        run:
          pip install -r requirements.txt

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'

      - name: Install API dependencies
        working-directory: ./apps/api
        run: npm install
      
      - name: Start Node API
        working-directory: ./apps/api
        run: |
          nohup npm start dev > api.log 2>&1 &
          sleep 10

      - name: Check API status
        run: curl http://localhost:3333/status || echo "API nÃ£o respondeu"

      - name: Capture machine IP and set as env variable
        run: |
          IP=$(hostname -I | awk '{print $1}')
          echo "API_HOST=$IP" >> $GITHUB_ENV

      - name: Install Appium
        run: |
          npm install -g appium

      - name: Install UiAutomator2
        run: |
          appium driver install uiautomator2

      - name: Start up Appium
        run: |
          nohup appium  &

      - name: Check Appium status
        run: curl http://localhost:4723/status

      - name: Install Android SDK system image
        run: |
          sdkmanager --install "system-images;android-34;google_apis;x86_64"

      - name: Create Device
        run: |
          echo no | avdmanager create avd -n "Pixel_7_Pro_API_34" -k "system-images;android-34;google_apis;x86_64" -d pixel_7_pro

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Run Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          profile: pixel_6_pro
          script: |
            avdmanager list device
            robot -d ./results ./tests

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results
          path: results
